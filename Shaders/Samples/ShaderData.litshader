
PROPERTIES_START // Properties
    [Enum(Light Direction 0, Light Color, 1, Light Attenuation, 2)] _Return ("Return", Int) = 0
PROPERTIES_END

CBUFFER_START
    uint _Return;
CBUFFER_END

CODE_START

    #define USE_SURFACEDESCRIPTION
    void SurfaceDescriptionFunction(Varyings IN, inout SurfaceDescription surface)
    {
        // Light Data
        // directional light in forward base
        // point/spot light in forward add
        // 0 in shadowcaster and meta
        UnityLightData light = GetUnityLightData(IN);
        float3 lightDirection = light.direction;
        half3 lightColor = light.color;
        half lightAttenuation = light.attenuation;

        // View Direction (World Space)
        float3 viewDirectionWS = GetViewDirectionWS(IN.positionWS);

        surface.Albedo = 0;
        surface.Smoothness = 0;
        switch(_Return)
        {
            case 0: surface.Emission = lightDirection * 0.5 + 0.5; return;
            case 1: surface.Emission = lightColor; return;
            case 2: surface.Emission = lightAttenuation; return;
        }
    }
CODE_END