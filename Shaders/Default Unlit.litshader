PROPERTIES_START // Properties
    [MainTexture] [ExtraProperty] _MainTex ("Albedo", 2D) = "white" {}
    [MainColor] _Color ("Color", Color) = (1,1,1,1)
PROPERTIES_END


DEFINES_START // Keywords, Defines
    //#define VARYINGS_NEED_TEXCOORDX (0-3)
    #define ATTRIBUTES_NEED_TEXCOORD0
    //#define VARYINGS_NEED_COLOR
    //#define VARYINGS_NEED_INTERPX (0-4)
    #define VARYINGS_NEED_INTERP0
    //#define VARYINGS_NEED_CULLFACE
DEFINES_END


CBUFFER_START // declare all Material properties excluding textures
    half4 _Color;
    float4 _MainTex_ST;
CBUFFER_END


CODE_START

    TEXTURE2D(_MainTex);
    SAMPLER(sampler_MainTex);

    // Modify attributes before the VertexDescription
    #define USE_MODIFYATTRIBUTES
    void ModifyAttributes(inout Attributes attributes)
    {

    }

    // VertexDescription:
    // Transform VertexPosition, VertexNormal, VertexTangent in World Space
    #define USE_VERTEXDESCRIPTION
    void VertexDescriptionFunction(Attributes attributes, inout VertexDescription description)
    {
        
    }

    // Modify varyings at the end
    #define USE_MODIFYVARYINGS
    void ModifyVaryings(Attributes attributes, VertexDescription description, inout Varyings varyings)
    {
        varyings.interp0.xy = TRANSFORM_TEX(attributes.uv0.xy, _MainTex);
    }


    // SurfaceDescription:
    // Albedo, Normal, Metallic, Emission, Smoothness, Occlusion
    // Alpha, AlphaClipThreshold, Reflectance
    #define USE_SURFACEDESCRIPTION
    void SurfaceDescriptionFunction(Varyings IN, inout SurfaceDescription surface)
    {
        float2 uv = IN.interp0.xy;
        half4 mainTex = SAMPLE_TEXTURE2D(_MainTex, sampler_MainTex, uv);
        mainTex *= _Color;
        
        surface.Albedo = mainTex.rgb;
        surface.Alpha = mainTex.a;
    }

CODE_END
