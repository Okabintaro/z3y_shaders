Shader ""
{
    Properties
    {
        $DefaultPropertiesInclude

        $PropertiesInclude
    }
    SubShader
    {
        Tags
        {
            "RenderPipeline"=""
            "RenderType"="UniversalPipeline"
            "Queue"="Geometry+0"
            "IgnoreProjector" = "True"
        }

        Pass
        {
            Name "ForwardLit"

            Tags 
            { 
                "LightMode" = "UniversalForward"
            }

            Blend [_SrcBlend] [_DstBlend]
            Cull [_Cull]
            // ZTest: <None>
            ZWrite [_ZWrite]
            $Feature_a2c


            HLSLPROGRAM
            #pragma prefer_hlslcc gles
            #define PIPELINE_URP
            #define GENERATION_CODE
            #define UNITY_PASS_FORWARD

            #pragma vertex vert
            #pragma fragment frag
            #pragma target 4.5

            // -------------------------------------
            // Universal Pipeline keywords
            #pragma multi_compile _ _MAIN_LIGHT_SHADOWS _MAIN_LIGHT_SHADOWS_CASCADE _MAIN_LIGHT_SHADOWS_SCREEN
            #pragma multi_compile _ _ADDITIONAL_LIGHTS_VERTEX _ADDITIONAL_LIGHTS
            #pragma multi_compile_fragment _ _ADDITIONAL_LIGHT_SHADOWS
            #pragma multi_compile_fragment _ _REFLECTION_PROBE_BLENDING
            #pragma multi_compile_fragment _ _REFLECTION_PROBE_BOX_PROJECTION
            #pragma multi_compile_fragment _ _SHADOWS_SOFT
            #pragma multi_compile_fragment _ _SCREEN_SPACE_OCCLUSION
            #pragma multi_compile_fragment _ _DBUFFER_MRT1 _DBUFFER_MRT2 _DBUFFER_MRT3
            #pragma multi_compile_fragment _ _LIGHT_LAYERS
            #pragma multi_compile_fragment _ _LIGHT_COOKIES
            #pragma multi_compile _ _CLUSTERED_RENDERING

            // -------------------------------------
            // Unity defined keywords
            #pragma multi_compile _ LIGHTMAP_SHADOW_MIXING
            #pragma multi_compile _ SHADOWS_SHADOWMASK
            #pragma multi_compile _ DIRLIGHTMAP_COMBINED
            #pragma multi_compile _ LIGHTMAP_ON
            #pragma multi_compile _ DYNAMICLIGHTMAP_ON
            #pragma multi_compile_fog
            #pragma multi_compile_fragment _ DEBUG_DISPLAY

            #pragma shader_feature_local _ _ALPHATEST_ON _ALPHAPREMULTIPLY_ON _ALPHAMODULATE_ON
            #pragma shader_feature_local _SPECULARHIGHLIGHTS_OFF
            #pragma shader_feature_local _GLOSSYREFLECTIONS_OFF
            #pragma shader_feature_local _LIGHTMAPPED_SPECULAR
            #pragma shader_feature_local _EMISSION

            //--------------------------------------
            // GPU Instancing
            #pragma multi_compile_instancing
            #pragma instancing_options renderinglayer
            #pragma multi_compile _ DOTS_INSTANCING_ON

            $Feature_MonoSH
            $Feature_BicubicLightmap
            $Feature_GSAA
            $Feature_Anisotropy
            $Feature_LightmappedSpecular

            $Defines

            #include "Packages/com.z3y.shaders/ShaderLibrary/ShaderPass.hlsl"
            #include "Packages/com.z3y.shaders/ShaderLibrary/Structs.hlsl"

            CBUFFER_START(UnityPerMaterial)
            $Cbuffer
            CBUFFER_END
            
            $ShaderDescription

            #include "Packages/com.z3y.shaders/ShaderLibrary/Vertex.hlsl"
            #include "Packages/com.z3y.shaders/ShaderLibrary/Fragment.hlsl"
            ENDHLSL
        }

        Pass
        {
            Name "ShadowCaster"

            Tags 
            { 
                "LightMode" = "ShadowCaster"
            }

            Cull [_Cull]
            ZTest LEqual
            ZWrite On

            HLSLPROGRAM
            #pragma prefer_hlslcc gles
            #define PIPELINE_URP
            #define GENERATION_CODE
            #ifndef UNITY_PASS_SHADOWCASTER
            #define UNITY_PASS_SHADOWCASTER
            #endif

            #pragma vertex vert
            #pragma fragment frag
            #pragma target 4.5

            #pragma multi_compile_instancing
            #pragma multi_compile _ DOTS_INSTANCING_ON
            // This is used during shadow map generation to differentiate between directional and punctual light shadows, as they use different formulas to apply Normal Bias
            #pragma multi_compile_vertex _ _CASTING_PUNCTUAL_LIGHT_SHADOW

            #pragma shader_feature_local _ _ALPHATEST_ON _ALPHAPREMULTIPLY_ON _ALPHAFADE_ON

            $Defines

            #include "Packages/com.z3y.shaders/ShaderLibrary/ShaderPass.hlsl"
            #include "Packages/com.z3y.shaders/ShaderLibrary/Structs.hlsl"

            CBUFFER_START(UnityPerMaterial)
            $Cbuffer
            CBUFFER_END

            $ShaderDescription

            #include "Packages/com.z3y.shaders/ShaderLibrary/Vertex.hlsl"
            #include "Packages/com.z3y.shaders/ShaderLibrary/FragmentShadowCaster.hlsl"
            ENDHLSL
        }

        Pass
        {
            Name "DepthOnly"
            Tags{"LightMode" = "DepthOnly"}
 
            ZWrite On
            ColorMask 0
            Cull[_Cull]
 
            HLSLPROGRAM
            #define PIPELINE_URP
            #define GENERATION_CODE
            #define UNITY_PASS_DEPTHONLY

            // Required to compile gles 2.0 with standard srp library
            #pragma prefer_hlslcc gles
            #pragma target 4.5
 
            #pragma vertex vert
            #pragma fragment frag
 
            // GPU Instancing
            #pragma multi_compile_instancing
            #pragma multi_compile _ DOTS_INSTANCING_ON

            $Defines

            #include "Packages/com.z3y.shaders/ShaderLibrary/ShaderPass.hlsl"
            #include "Packages/com.z3y.shaders/ShaderLibrary/Structs.hlsl"

            CBUFFER_START(UnityPerMaterial)
            $Cbuffer
            CBUFFER_END

            $ShaderDescription

            #include "Packages/com.z3y.shaders/ShaderLibrary/Vertex.hlsl"
            #include "Packages/com.z3y.shaders/ShaderLibrary/FragmentShadowCaster.hlsl"
            ENDHLSL
        }

        Pass
        {
            Name "META_BAKERY"
            Tags { "LightMode"="Meta" }
            Cull Off

            HLSLPROGRAM
            #define PIPELINE_URP
            #define GENERATION_CODE
            #define UNITY_PASS_META

            #pragma vertex vert
            #pragma fragment frag
            #pragma target 4.5

            #pragma shader_feature EDITOR_VISUALIZATION
            #pragma shader_feature_local _ _ALPHATEST_ON _ALPHAPREMULTIPLY_ON _ALPHAMODULATE_ON
            #pragma shader_feature_local _EMISSION

            $Defines

            #include "Packages/com.z3y.shaders/ShaderLibrary/ShaderPass.hlsl"
            #include "Packages/com.z3y.shaders/ShaderLibrary/Structs.hlsl"

            CBUFFER_START(UnityPerMaterial)
            $Cbuffer
            CBUFFER_END
            
            $ShaderDescription

            #include "Packages/com.z3y.shaders/ShaderLibrary/Vertex.hlsl"
            #include "Packages/com.z3y.shaders/ShaderLibrary/FragmentMeta.hlsl"
            ENDHLSL
        }

    }
    $ShaderEditor
    // Fallback "Standard"
}
